* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

html, body {
  height: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-font-smoothing: antialiased; }

h1, h2, h3, h4, h5, h6 {
  font-weight: 500; }

body {
  background-color: white; }

button {
  border-style: none;
  outline: none; }

ul {
  list-style: none; }

li {
  list-style: none; }

a {
  text-decoration: none; }

input {
  outline: none !important;
  -webkit-box-shadow: none !important;
          box-shadow: none !important;
  border-radius: 0px;
  border: none; }

textarea {
  border: none;
  overflow: auto;
  outline: none;
  resize: none;
  -webkit-box-shadow: none;
  box-shadow: none; }

body {
  color: black; }

.content-area {
  height: 100%;
  margin: 0 auto;
  width: 320px; }
  @media (min-width: 46.875em) and (max-width: 60.615em) {
    .content-area {
      width: 750px; } }
  @media (min-width: 60.625em) and (max-width: 73.115em) {
    .content-area {
      width: 970px; } }
  @media (min-width: 73.125em) {
    .content-area {
      width: 1170px; } }

.page-content-wrapper {
  margin-bottom: -374px;
  min-height: 100%; }
  .page-content-wrapper:after {
    content: '';
    display: block;
    height: 600px; }

.page-footer {
  height: 374px; }

@font-face {
  font-family: "MuseoSansCyrl-100";
  src: url("/static/fonts/MuseoSansLight/MuseoSansLight.eot");
  src: url("/static/fonts/MuseoSansLight/MuseoSansLight.eot?#iefix") format("embedded-opentype"), url("/static/fonts/MuseoSansLight/MuseoSansLight.woff2") format("woff2"), url("/static/fonts/MuseoSansLight/MuseoSansLight.woff") format("woff"), url("/static/fonts/MuseoSansLight/MuseoSansLight.ttf") format("ttf"), url("/static/fonts/MuseoSansLight/MuseoSansLight.svg#MuseoSansCyrl-100") format("svg");
  font-style: normal;
  font-weight: 300; }

@font-face {
  font-family: "MuseoSansCyrl-300";
  src: url("/static/fonts/MuseoSansRegular/MuseoSansRegular.eot");
  src: url("/static/fonts/MuseoSansRegular/MuseoSansRegular.eot?#iefix") format("embedded-opentype"), url("/static/fonts/MuseoSansRegular/MuseoSansRegular.woff2") format("woff2"), url("/static/fonts/MuseoSansRegular/MuseoSansRegular.woff") format("woff"), url("/static/fonts/MuseoSansRegular/MuseoSansRegular.ttf") format("ttf"), url("/static/fonts/MuseoSansRegular/MuseoSansRegular.svg#MuseoSansCyrl-300") format("svg");
  font-style: normal;
  font-weight: 300; }

@font-face {
  font-family: "MuseoSansCyrl-500";
  src: url("/static/fonts/MuseoSansMedium/MuseoSansMedium.eot");
  src: url("/static/fonts/MuseoSansMedium/MuseoSansMedium.eot?#iefix") format("embedded-opentype"), url("/static/fonts/MuseoSansMedium/MuseoSansMedium.woff2") format("woff2"), url("/static/fonts/MuseoSansMedium/MuseoSansMedium.woff") format("woff"), url("/static/fonts/MuseoSansMedium/MuseoSansMedium.ttf") format("ttf"), url("/static/fonts/MuseoSansMedium/MuseoSansMedium.svg#MuseoSansCyrl-500") format("svg");
  font-style: normal;
  font-weight: 300; }

@font-face {
  font-family: "MuseoSansCyrl-700";
  src: url("/static/fonts/MuseoSansBold/MuseoSansBold.eot");
  src: url("/static/fonts/MuseoSansBold/MuseoSansBold.eot?#iefix") format("embedded-opentype"), url("/static/fonts/MuseoSansBold/MuseoSansBold.woff2") format("woff2"), url("/static/fonts/MuseoSansBold/MuseoSansBold.woff") format("woff"), url("/static/fonts/MuseoSansBold/MuseoSansBold.ttf") format("ttf"), url("/static/fonts/MuseoSansBold/MuseoSansBold.svg#MuseoSansCyrl-700") format("svg");
  font-style: normal;
  font-weight: demi; }

@font-face {
  font-family: "MuseoSansCyrl-900";
  src: url("/static/fonts/MuseoSansBlack/MuseoSansBlack.eot");
  src: url("/static/fonts/MuseoSansBlack/MuseoSansBlack.eot?#iefix") format("embedded-opentype"), url("/static/fonts/MuseoSansBlack/MuseoSansBlack.woff2") format("woff2"), url("/static/fonts/MuseoSansBlack/MuseoSansBlack.woff") format("woff"), url("/static/fonts/MuseoSansBlack/MuseoSansBlack.ttf") format("ttf"), url("/static/fonts/MuseoSansBlack/MuseoSansBlack.svg#MuseoSansCyrl-900") format("svg");
  font-style: normal;
  font-weight: 700; }

body {
  font-family: "MuseoSansCyrl-500"; }

.header-top {
  height: 90px; }

.header-bottom {
  height: 54px; }

.footer-middle {
  height: 300px;
  font-size: 2.0736rem;
  text-align: center; }

.footer-bottom {
  height: 74px;
  text-align: center;
  background-color: #1c1c1c; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
